{"version":3,"names":["textCss","Text","__stencil_proxyCustomElement","HTMLElement","variant","color","weight","truncate","getTag","tagMap","h1","h2","h3","body","caption","link","this","render","Tag","h","Host","key","class","text"],"sources":["src/components/atoms/text/text.css?tag=ui-text","src/components/atoms/text/text.tsx"],"sourcesContent":["/* Design Tokens from Figma */\nui-text {\n  --font-family: \"Open Sans\", sans-serif;\n  --font-size-xs: 0.625rem;   /* 10px */\n  --font-size-sm: 0.875rem;   /* 14px */  \n  --font-size-base: 0.75rem;  /* 12px */\n  --font-size-lg: 1rem;       /* 16px */\n  --font-size-xl: 1.125rem;   /* 18px */\n  --font-size-2xl: 1.25rem;   /* 20px */\n  --font-size-3xl: 1.5rem;    /* 24px */\n  \n  --font-weight-regular: 400;\n  --font-weight-medium: 500;\n  --font-weight-semibold: 600;\n  --font-weight-bold: 700;\n  \n  --line-height-tight: 1;\n  --line-height-base: 1.5;\n  --line-height-relaxed: 1.6;\n  \n  /* Colors */\n  --text-primary: #616161;\n  --text-secondary: #9e9e9e;\n  --text-link: #297cd6;\n  --text-success: #18811d;\n  --text-warning: #ffa000;\n  --text-error: #911a08;\n  --text-notification: #ffffff;\n}\n\n.text {\n  font-family: var(--font-family);\n  color: var(--text-primary);\n  margin: 0;\n  padding: 0;\n}\n\n/* Variant styles */\n.text--h1 h1 {\n  font-size: var(--font-size-3xl);\n  font-weight: var(--font-weight-bold);\n  line-height: var(--line-height-tight);\n  margin: 0;\n}\n\n.text--h2 h2 {\n  font-size: var(--font-size-2xl);\n  font-weight: var(--font-weight-bold);\n  line-height: var(--line-height-tight);\n  margin: 0;\n}\n\n.text--h3 h3 {\n  font-size: var(--font-size-xl);\n  font-weight: var(--font-weight-semibold);\n  line-height: var(--line-height-tight);\n  margin: 0;\n}\n\n.text--body span {\n  font-size: var(--font-size-base);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-base);\n}\n\n.text--caption span {\n  font-size: var(--font-size-xs);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-tight);\n}\n\n.text--link span {\n  font-size: var(--font-size-base);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-base);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n/* Color variants */\n.text--primary {\n  color: var(--text-primary);\n}\n\n.text--secondary {\n  color: var(--text-secondary);\n}\n\n.text--link {\n  color: var(--text-link);\n}\n\n.text--success {\n  color: var(--text-success);\n}\n\n.text--warning {\n  color: var(--text-warning);\n}\n\n.text--error {\n  color: var(--text-error);\n}\n\n/* Weight variants */\n.text--normal h1,\n.text--normal h2,\n.text--normal h3,\n.text--normal span {\n  font-weight: var(--font-weight-regular);\n}\n\n.text--medium h1,\n.text--medium h2,\n.text--medium h3,\n.text--medium span {\n  font-weight: var(--font-weight-medium);\n}\n\n.text--semibold h1,\n.text--semibold h2,\n.text--semibold h3,\n.text--semibold span {\n  font-weight: var(--font-weight-semibold);\n}\n\n.text--bold h1,\n.text--bold h2,\n.text--bold h3,\n.text--bold span {\n  font-weight: var(--font-weight-bold);\n}\n\n/* Truncation */\n.text--truncate h1,\n.text--truncate h2,\n.text--truncate h3,\n.text--truncate span {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}","import { Component, Prop, h, Host } from '@stencil/core';\n\nexport interface TextProps {\n  variant: 'h1' | 'h2' | 'h3' | 'body' | 'caption' | 'link';\n  color?: 'primary' | 'secondary' | 'link' | 'success' | 'warning' | 'error';\n  weight?: 'normal' | 'medium' | 'semibold' | 'bold';\n  truncate?: boolean;\n}\n\n@Component({\n  tag: 'ui-text',\n  styleUrl: 'text.css',\n  shadow: false,\n})\nexport class Text {\n  @Prop() variant: TextProps['variant'] = 'body';\n  @Prop() color?: TextProps['color'];\n  @Prop() weight?: TextProps['weight'];\n  @Prop() truncate?: boolean = false;\n\n  private getTag(): string {\n    const tagMap = {\n      'h1': 'h1',\n      'h2': 'h2', \n      'h3': 'h3',\n      'body': 'span',\n      'caption': 'span',\n      'link': 'span'\n    };\n    \n    return tagMap[this.variant] || 'span';\n  }\n\n  render() {\n    const Tag = this.getTag() as any;\n    \n    return (\n      <Host \n        class={{\n          'text': true,\n          [`text--${this.variant}`]: true,\n          [`text--${this.color}`]: !!this.color,\n          [`text--${this.weight}`]: !!this.weight,\n          'text--truncate': this.truncate,\n        }}\n      >\n        <Tag>\n          <slot></slot>\n        </Tag>\n      </Host>\n    );\n  }\n}"],"mappings":"yDAAA,MAAMA,EAAU,2rE,MCcHC,EAAIC,EAAA,MAAAD,UAAAE,E,4CACPC,QAAgC,OAChCC,MACAC,OACAC,SAAqB,MAErB,MAAAC,GACN,MAAMC,EAAS,CACbC,GAAM,KACNC,GAAM,KACNC,GAAM,KACNC,KAAQ,OACRC,QAAW,OACXC,KAAQ,QAGV,OAAON,EAAOO,KAAKZ,UAAY,M,CAGjC,MAAAa,GACE,MAAMC,EAAMF,KAAKR,SAEjB,OACEW,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,KAAQ,KACR,CAAC,SAASP,KAAKZ,WAAY,KAC3B,CAAC,SAASY,KAAKX,WAAYW,KAAKX,MAChC,CAAC,SAASW,KAAKV,YAAaU,KAAKV,OACjC,iBAAkBU,KAAKT,WAGzBY,EAACD,EAAG,CAAAG,IAAA,4CACFF,EAAa,QAAAE,IAAA,8C","ignoreList":[]}