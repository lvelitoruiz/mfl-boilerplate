{"version":3,"names":["dropdownCellCss","DropdownCell","__stencil_proxyCustomElement","HTMLElement","value","placeholder","options","disabled","isOpen","dropdownChange","dropdownRef","handleDocumentClick","event","this","contains","target","toggleDropdown","selectOption","optionValue","emit","getDisplayValue","selectedOption","find","option","label","renderOption","isSelected","h","key","class","onClick","variant","render","hasValue","classes","Host","ref","el","color","truncate","name","size","map"],"sources":["src/components/molecules/dropdown-cell/dropdown-cell.css?tag=dropdown-cell","src/components/molecules/dropdown-cell/dropdown-cell.tsx"],"sourcesContent":["dropdown-cell {\n  display: block;\n  position: relative;\n  padding: 16px 12px;\n  min-width: 120px;\n  height: 100%;\n  box-sizing: border-box;\n}\n\n.dropdown-cell {\n  width: 100%;\n}\n\n.dropdown-cell--disabled {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.dropdown-cell__content {\n  position: relative;\n  width: 100%;\n}\n\n.dropdown-cell__trigger {\n  display: flex;\n  align-items: center;\n  gap: var(--ui-spacing-xs, 4px);\n  cursor: pointer;\n  padding: var(--ui-spacing-xs, 4px);\n  border-radius: var(--ui-radius-base, 4px);\n  transition: background-color 0.2s ease;\n}\n\n.dropdown-cell__trigger:hover {\n  background-color: var(--ui-bg-hover, #f5f5f5);\n}\n\n.dropdown-cell--open .dropdown-cell__trigger {\n  background-color: var(--ui-bg-hover, #f5f5f5);\n}\n\n.dropdown-cell__value {\n  flex: 1;\n  min-width: 0;\n}\n\n.dropdown-cell__icon {\n  transition: transform 0.2s ease;\n  color: var(--ui-text-secondary, #9e9e9e);\n}\n\n.dropdown-cell--open .dropdown-cell__icon {\n  transform: rotate(180deg);\n}\n\n.dropdown-cell__dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: var(--ui-z-dropdown, 1000);\n  background: var(--ui-bg-primary, #ffffff);\n  border: 1px solid var(--ui-border-color, #eceff1);\n  border-radius: var(--ui-radius-base, 4px);\n  box-shadow: var(--ui-shadow-md, 0 4px 6px -1px rgba(0, 0, 0, 0.1));\n  margin-top: var(--ui-spacing-xs, 4px);\n}\n\n.dropdown-cell__options {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.dropdown-cell__option {\n  padding: var(--ui-spacing-sm, 8px);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.dropdown-cell__option:hover {\n  background-color: var(--ui-bg-hover, #f5f5f5);\n}\n\n.dropdown-cell__option--selected {\n  background-color: var(--ui-bg-neutral, #eaf2fb);\n  color: var(--ui-color-neutral, #297cd6);\n}\n\n.dropdown-cell__option:first-child {\n  border-top-left-radius: var(--ui-radius-base, 4px);\n  border-top-right-radius: var(--ui-radius-base, 4px);\n}\n\n.dropdown-cell__option:last-child {\n  border-bottom-left-radius: var(--ui-radius-base, 4px);\n  border-bottom-right-radius: var(--ui-radius-base, 4px);\n}","import { Component, Prop, h, Host, State, Event, EventEmitter, Listen } from '@stencil/core';\n\nexport interface DropdownOption {\n  value: string;\n  label: string;\n}\n\nexport interface DropdownCellProps {\n  value: string;\n  placeholder?: string;\n  options?: DropdownOption[];\n  disabled?: boolean;\n}\n\n@Component({\n  tag: 'dropdown-cell',\n  styleUrl: 'dropdown-cell.css',\n  shadow: false,\n})\nexport class DropdownCell {\n  @Prop() value: string = '';\n  @Prop() placeholder: string = 'Select...';\n  @Prop() options: DropdownOption[] = [];\n  @Prop() disabled: boolean = false;\n\n  @State() isOpen: boolean = false;\n\n  @Event() dropdownChange: EventEmitter<string>;\n\n  private dropdownRef?: HTMLElement;\n\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: Event) {\n    if (!this.dropdownRef?.contains(event.target as Node)) {\n      this.isOpen = false;\n    }\n  }\n\n  private toggleDropdown = () => {\n    if (!this.disabled) {\n      this.isOpen = !this.isOpen;\n    }\n  };\n\n  private selectOption = (optionValue: string) => {\n    this.dropdownChange.emit(optionValue);\n    this.isOpen = false;\n  };\n\n  private getDisplayValue(): string {\n    const selectedOption = this.options.find(option => option.value === this.value);\n    return selectedOption ? selectedOption.label : this.value || this.placeholder;\n  }\n\n  private renderOption = (option: DropdownOption) => {\n    const isSelected = option.value === this.value;\n    return (\n      <div\n        key={option.value}\n        class={{\n          'dropdown-cell__option': true,\n          'dropdown-cell__option--selected': isSelected,\n        }}\n        onClick={() => this.selectOption(option.value)}\n      >\n        <ui-text variant=\"body\">{option.label}</ui-text>\n      </div>\n    );\n  };\n\n  render() {\n    const hasValue = this.value && this.value !== '';\n    const classes = {\n      'dropdown-cell': true,\n      'dropdown-cell--disabled': this.disabled,\n      'dropdown-cell--open': this.isOpen,\n      'dropdown-cell--has-value': hasValue,\n    };\n\n    return (\n      <Host class={classes}>\n        <div \n          class=\"dropdown-cell__content\"\n          ref={(el) => this.dropdownRef = el}\n        >\n          <div class=\"dropdown-cell__trigger\" onClick={this.toggleDropdown}>\n            <ui-text \n              variant=\"body\"\n              color={hasValue ? 'primary' : 'secondary'}\n              class=\"dropdown-cell__value\"\n              truncate={true}\n            >\n              {this.getDisplayValue()}\n            </ui-text>\n            <ui-icon \n              name=\"chevron-down\" \n              size=\"sm\"\n              class=\"dropdown-cell__icon\"\n            ></ui-icon>\n          </div>\n\n          {this.isOpen && (\n            <div class=\"dropdown-cell__dropdown\">\n              <div class=\"dropdown-cell__options\">\n                {this.options.map(this.renderOption)}\n              </div>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}"],"mappings":"wIAAA,MAAMA,EAAkB,6wD,MCmBXC,EAAYC,EAAA,MAAAD,UAAAE,E,yFACfC,MAAgB,GAChBC,YAAsB,YACtBC,QAA4B,GAC5BC,SAAoB,MAEnBC,OAAkB,MAElBC,eAEDC,YAGR,mBAAAC,CAAoBC,GAClB,IAAKC,KAAKH,aAAaI,SAASF,EAAMG,QAAiB,CACrDF,KAAKL,OAAS,K,EAIVQ,eAAiB,KACvB,IAAKH,KAAKN,SAAU,CAClBM,KAAKL,QAAUK,KAAKL,M,GAIhBS,aAAgBC,IACtBL,KAAKJ,eAAeU,KAAKD,GACzBL,KAAKL,OAAS,KAAK,EAGb,eAAAY,GACN,MAAMC,EAAiBR,KAAKP,QAAQgB,MAAKC,GAAUA,EAAOnB,QAAUS,KAAKT,QACzE,OAAOiB,EAAiBA,EAAeG,MAAQX,KAAKT,OAASS,KAAKR,W,CAG5DoB,aAAgBF,IACtB,MAAMG,EAAaH,EAAOnB,QAAUS,KAAKT,MACzC,OACEuB,EAAA,OACEC,IAAKL,EAAOnB,MACZyB,MAAO,CACL,wBAAyB,KACzB,kCAAmCH,GAErCI,QAAS,IAAMjB,KAAKI,aAAaM,EAAOnB,QAExCuB,EAAS,WAAAI,QAAQ,QAAQR,EAAOC,OAC5B,EAIV,MAAAQ,GACE,MAAMC,EAAWpB,KAAKT,OAASS,KAAKT,QAAU,GAC9C,MAAM8B,EAAU,CACd,gBAAiB,KACjB,0BAA2BrB,KAAKN,SAChC,sBAAuBM,KAAKL,OAC5B,2BAA4ByB,GAG9B,OACEN,EAACQ,EAAK,CAAAP,IAAA,2CAAAC,MAAOK,GACXP,EAAA,OAAAC,IAAA,2CACEC,MAAM,yBACNO,IAAMC,GAAOxB,KAAKH,YAAc2B,GAEhCV,EAAK,OAAAC,IAAA,2CAAAC,MAAM,yBAAyBC,QAASjB,KAAKG,gBAChDW,EAAA,WAAAC,IAAA,2CACEG,QAAQ,OACRO,MAAOL,EAAW,UAAY,YAC9BJ,MAAM,uBACNU,SAAU,MAET1B,KAAKO,mBAERO,EAAA,WAAAC,IAAA,2CACEY,KAAK,eACLC,KAAK,KACLZ,MAAM,yBAIThB,KAAKL,QACJmB,EAAK,OAAAC,IAAA,2CAAAC,MAAM,2BACTF,EAAK,OAAAC,IAAA,2CAAAC,MAAM,0BACRhB,KAAKP,QAAQoC,IAAI7B,KAAKY,iB","ignoreList":[]}